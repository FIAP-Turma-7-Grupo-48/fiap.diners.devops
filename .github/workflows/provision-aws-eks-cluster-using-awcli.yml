name: 'Provision AWS EKS Cluster using Terraform'

on: workflow_dispatch

permissions:
  contents: read

env:
  TF_VERSION: '1.5.0'  # Especifique a versão do Terraform que você está usando
  AWS_REGION: 'us-east-1'  # Defina a região AWS que você deseja usar

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: 'terraform'
        sparse-checkout-cone-mode: false

    # This step is needed because expo-github-action does not support paths.
    # Therefore all mobile app assets should be moved to the project root.
    - name: Move terraform files to root
      run: |
        ls -lah
        shopt -s dotglob
        mv terraform/* .
        rm -rf terraform/eks
        rm -rf terraform/
        ls -lah

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Armazene essas credenciais nos secrets do repositório
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      # if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve
